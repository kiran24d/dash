---
AWSTemplateFormatVersion: 2010-09-09
Description: Create base IAM roles


Mappings:

  AccountMap:
    # cvent-sandbox
    '572724207364':
      AccountName: cvent-sandbox
    # cvent-development
    '504055967630':
      AccountName: cvent-development
    # cvent-integration
    '834623602341':
      AccountName: cvent-integration
    # cvent-production
    '659687181524':
      AccountName: cvent-production
    # cvent-management
    '667621734181':
      AccountName: cvent-management
    # core-app-prod
    '924052762697':
      AccountName: core-app-prod
    # core-cdt-prod
    '611736519059':
      AccountName: core-cdt-prod
    # core-fnd-prod
    '752921502988':
      AccountName: core-fnd-prod
    # eu-ecommerce-prod
    '380741956730':
      AccountName: eu-ecommerce-prod
    # core-reinforce-prod
    '981730702137':
      AccountName: core-reinforce-prod
    # core-reinforce-dev
    '219736445914':
      AccountName: core-reinforce-dev

Resources:

  RoleCoreReinforceProdAdmin:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: aws-cvt-admins

  RoleCoreReinforceProdAppSupport:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-appsupport

  RoleCoreReinforceProdDba:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
        - arn:aws:iam::aws:policy/AWSSupportAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
      RoleName: aws-cvt-dba

  RoleCoreReinforceProdDbaManagement:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
      RoleName: aws-cvt-dbamanagement

  RoleCoreReinforceProdDbaLeads:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      RoleName: aws-cvt-dbaleads

  RoleCoreReinforceProdDevLeads:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-devleads

  RoleCoreReinforceProdDevops:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSSupportAccess
      RoleName: aws-cvt-devops

  RoleCoreReinforceProdDevs:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-devs

  RoleCoreReinforceProdNetworking:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-networking

  RoleCoreReinforceProdNetworkingLeads:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-networkingleads

  RoleCoreReinforceProdNoc:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSSupportAccess
      RoleName: aws-cvt-noc

  RoleCoreReinforceProdQa:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-qa

  RoleCoreReinforceProdSyseng:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      RoleName: aws-cvt-syseng

  RoleCoreReinforceProdUi:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-ui

  ############################# Policies ##############################
  NetworkPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:CreateCustomerGateway",
                "ec2:CreateVpnConnection",
                "ec2:CreateVpnConnectionRoute",
                "ec2:CreateVpnGateway",
                "ec2:DeleteCustomerGateway",
                "ec2:DeleteVpnConnection",
                "ec2:DeleteVpnConnectionRoute",
                "ec2:DeleteVpnGateway",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpnGateways",
                "ec2:DetachVpnGateway"
              ],
              "Resource": "*"
            }
          ]
        }
      PolicyName: cvent-networking
      Roles:
        - Ref: "RoleCoreReinforceProdNetworking"

  DbaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iam:GetRole
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - ec2:ModifyNetworkInterfaceAttribute
              - redshift:ModifyClusterIamRoles
              - cloudwatch:List*
              - ec2:DescribeSecurityGroups
              - dms:*
              - ec2:DescribeInternetGateways
              - iam:PassRole
              - cloudformation:CreateStack
              - redshift:Describe*
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeVpcs
              - kms:*
              - cloudformation:DeleteStack
              - kms:ListAliases
              - logs:GetLogEvents
              - kms:DescribeKey
              - cloudwatch:Get*
              - logs:FilterLogEvents
              - ec2:DescribeSubnets
            Resource: "*"
          - Effect: Deny
            Action:
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:UpdateSecurityGroupRuleDescriptionsEgress
              - ec2:ImportKeyPair
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:CreateVpc
              - ec2:CreateRouteTable
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
              - ec2:RevokeSecurityGroupIngress
              - ec2:CreateRoute
              - ec2:CreateSecurityGroup
              - ec2:RevokeSecurityGroupEgress
              - ec2:DeleteSecurityGroup
              - ec2:ModifyReservedInstances
              - rds:ModifyDBInstance
              - es:DescribeReservedElasticsearchInstances
            Resource: "*"
      PolicyName:
        Fn::Join:
          - "-"
          - - !FindInMap [AccountMap, !Ref "AWS::AccountId", AccountName]
            - dba
      Roles:
        - !Ref RoleCoreReinforceProdDba

  DbaManagementPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        Fn::Join:
          - "-"
          - - !FindInMap [AccountMap, !Ref "AWS::AccountId", AccountName]
            - dba-management
      Roles:
        - !Ref RoleCoreReinforceProdDbaManagement
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - ec2:CopyImage
              - ec2:CopySnapshot
              - ec2:CreateImage
              - ec2:CreateSnapshot
              - ec2:CreateTags
              - ec2:Describe*
            Effect: Allow
            Resource: "*"

  PowerUsersPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        Fn::Join:
          - "-"
          - - !FindInMap [AccountMap, !Ref "AWS::AccountId", AccountName]
            - power-users
      Roles:
        - !Ref RoleCoreReinforceProdDbaLeads
        - !Ref RoleCoreReinforceProdDevops
        - !Ref RoleCoreReinforceProdSyseng
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - iam:AddUserToGroup
              - iam:AttachGroupPolicy
              - iam:AttachRolePolicy
              - iam:AttachUserPolicy
              - iam:CreateAccessKey
              - iam:CreateGroup
              - iam:CreatePolicy
              - iam:CreatePolicyVersion
              - iam:CreateRole
              - iam:CreateSAMLProvider
              - iam:CreateUser
              - iam:CreateVirtualMFADevice
              - iam:DeactivateMFADevice
              - iam:DeleteAccessKey
              - iam:DeleteAccountAlias
              - iam:DeleteAccountPasswordPolicy
              - iam:DeleteGroup
              - iam:DeleteGroupPolicy
              - iam:DeletePolicy
              - iam:DeletePolicyVersion
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:DeleteSAMLProvider
              - iam:DeleteSSHPublicKey
              - iam:DeleteUser
              - iam:DeleteUserPolicy
              - iam:DeleteVirtualMFADevice
              - iam:DetachGroupPolicy
              - iam:DetachRolePolicy
              - iam:DetachUserPolicy
              - iam:EnableMFADevice
              - iam:PutGroupPolicy
              - iam:PutRolePolicy
              - iam:PutUserPolicy
              - iam:RemoveUserFromGroup
              - iam:UpdateAssumeRolePolicy
              - iam:UpdateGroup
              - iam:UpdateLoginProfile
              - iam:UpdateOpenIDConnectProviderThumbprint
              - iam:UpdateSAMLProvider
              - iam:UpdateSSHPublicKey
              - iam:UpdateServerCertificate
              - iam:UpdateSigningCertificate
              - iam:UpdateUser
              - iam:UploadSSHPublicKey
              - iam:UploadServerCertificate
              - iam:UploadSigningCertificate
            Effect: Deny
            Resource: "*"
          - Action: "*"
            Effect: Allow
            Resource: "*"

  NetworkingLeadsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        Fn::Join:
          - "-"
          - - !FindInMap [AccountMap, !Ref "AWS::AccountId", AccountName]
            - networkingleads
      Roles:
        - !Ref RoleCoreReinforceProdNetworkingLeads
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - iam:AddUserToGroup
              - iam:CreateAccessKey
              - iam:CreateGroup
              - iam:CreateSAMLProvider
              - iam:CreateUser
              - iam:CreateVirtualMFADevice
              - iam:DeactivateMFADevice
              - iam:DeleteAccessKey
              - iam:DeleteAccountAlias
              - iam:DeleteAccountPasswordPolicy
              - iam:DeleteGroup
              - iam:DeleteGroupPolicy
              - iam:DeletePolicy
              - iam:DeletePolicyVersion
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:DeleteSAMLProvider
              - iam:DeleteSSHPublicKey
              - iam:DeleteUser
              - iam:DeleteUserPolicy
              - iam:DeleteVirtualMFADevice
              - iam:EnableMFADevice
              - iam:RemoveUserFromGroup
              - iam:UpdateGroup
              - iam:UpdateLoginProfile
              - iam:UpdateOpenIDConnectProviderThumbprint
              - iam:UpdateSAMLProvider
              - iam:UpdateSSHPublicKey
              - iam:UpdateServerCertificate
              - iam:UpdateSigningCertificate
              - iam:UpdateUser
              - iam:UploadSSHPublicKey
              - iam:UploadServerCertificate
              - iam:UploadSigningCertificate
            Effect: Deny
            Resource: "*"
          - Action: "*"
            Effect: Allow
            Resource: "*"

  NocPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        Fn::Join:
          - "-"
          - - !FindInMap [AccountMap, !Ref "AWS::AccountId", AccountName]
            - noc
      Roles:
        - !Ref RoleCoreReinforceProdNoc
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - ec2:RebootInstances
              - ec2:StartInstances
              - ec2:StopInstances
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
            Effect: Allow
            Resource: "*"
          - Effect: Allow
            Action:
              - ecs:RunTask
              - ecs:ListAttributes
              - ecs:ListTasks
              - ecs:StartTask
              - ecs:StopTask
              - ecs:ListContainerInstances
              - ecs:DescribeContainerInstances
              - ecs:DescribeTasks
              - ecs:DescribeClusters
            Resource:
              - arn:aws:ecs:*:*:task-definition/*:*
              - arn:aws:ecs:*:*:task/*
              - arn:aws:ecs:*:*:container-instance/*
              - arn:aws:ecs:*:*:cluster/*
