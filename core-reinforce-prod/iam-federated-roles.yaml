AWSTemplateFormatVersion: 2010-09-09
Description: Create base IAM roles


Mappings:

  AccountMap:
    # cvent-sandbox
    '572724207364':
      AccountName: cvent-sandbox
    # cvent-development
    '504055967630':
      AccountName: cvent-development
    # cvent-integration
    '834623602341':
      AccountName: cvent-integration
    # cvent-production
    '659687181524':
      AccountName: cvent-production
    # cvent-management
    '667621734181':
      AccountName: cvent-management
    # core-app-prod
    '924052762697':
      AccountName: core-app-prod
    # core-cdt-prod
    '611736519059':
      AccountName: core-cdt-prod
    # core-fnd-prod
    '752921502988':
      AccountName: core-fnd-prod
    # eu-ecommerce-prod
    '380741956730':
      AccountName: eu-ecommerce-prod

    # core-reinforce-prod
    '981730702137':
      AccountName: core-reinforce-prod

    # core-reinforce-dev
    '219736445914':
      AccountName: core-reinforce-dev

Resources:

  RoleCoreReinforceProdAdmin:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: aws-cvt-admins

  RoleCoreReinforceProdAppSupport:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-appsupport

  RoleCoreReinforceProdDba:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonRDSFullAccess
          - arn:aws:iam::aws:policy/AmazonEC2FullAccess
          - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
          - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
          - arn:aws:iam::aws:policy/AWSSupportAccess
          - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
      RoleName: aws-cvt-dba

  RoleCoreReinforceProdDbaManagement:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonRDSFullAccess
          - arn:aws:iam::aws:policy/CloudWatchFullAccess
      RoleName: aws-cvt-dbamanagement

  RoleCoreReinforceProdDbaLeads:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      RoleName: aws-cvt-dbaleads

  RoleCoreReinforceProdDevLeads:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonEC2FullAccess
          - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-devleads

  RoleCoreReinforceProdDevops:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AWSSupportAccess
      RoleName: aws-cvt-devops

  RoleCoreReinforceProdDevs:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-devs

  RoleCoreReinforceProdInfosec:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/ReadOnlyAccess
          - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      RoleName: aws-cvt-infosec

  RoleCoreReinforceProdNetworking:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-networking

  RoleCoreReinforceProdNetworkingLeads:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-networkingleads

  RoleCoreReinforceProdNoc:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AWSSupportAccess
      RoleName: aws-cvt-noc

  RoleCoreReinforceProdQa:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-qa

  RoleCoreReinforceProdSyseng:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      RoleName: aws-cvt-syseng

  RoleCoreReinforceProdUi:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub
        |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso"
              },
              "Action": "sts:AssumeRoleWithSAML",
              "Condition": {
                "StringEquals": {
                  "SAML:aud": "https://signin.aws.amazon.com/saml"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::667621734181:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {}
            }
          ]
        }
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: aws-cvt-ui

  ############################# Policies ##############################
  DbaPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow

            Action:
              - iam:GetRole
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - ec2:ModifyNetworkInterfaceAttribute
              - redshift:ModifyClusterIamRoles
              - cloudwatch:List*
              - ec2:DescribeSecurityGroups
              - dms:*
              - ec2:DescribeInternetGateways
              - iam:PassRole
              - cloudformation:CreateStack
              - redshift:Describe*
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeVpcs
              - kms:*
              - cloudformation:DeleteStack
              - kms:ListAliases
              - logs:GetLogEvents
              - kms:DescribeKey
              - cloudwatch:Get*
              - logs:FilterLogEvents
              - ec2:DescribeSubnets
            Resource: "*"
          - 
            Effect: Deny
            Action:
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:UpdateSecurityGroupRuleDescriptionsEgress
              - ec2:ImportKeyPair
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:CreateVpc
              - ec2:CreateRouteTable
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
              - ec2:RevokeSecurityGroupIngress
              - ec2:CreateRoute
              - ec2:CreateSecurityGroup
              - ec2:RevokeSecurityGroupEgress
              - ec2:DeleteSecurityGroup
              - ec2:ModifyReservedInstances
            Resource: "*"
      PolicyName:
        Fn::Join:
          - "-"
          -
            - !FindInMap [ AccountMap, !Ref "AWS::AccountId", AccountName ]
            - dba
      Roles: 
        - !Ref RoleCoreReinforceProdDba

  DbaManagementPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName:
        Fn::Join:
          - "-"
          -
            - !FindInMap [ AccountMap, !Ref "AWS::AccountId", AccountName ]
            - dba-management
      Roles: 
        - !Ref RoleCoreReinforceProdDbaManagement
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - 
          Action:
            - ec2:CopyImage
            - ec2:CopySnapshot
            - ec2:CreateImage
            - ec2:CreateSnapshot
            - ec2:CreateTags
            - ec2:Describe*
          Effect: Allow
          Resource: "*"

  PowerUsersPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName:
        Fn::Join:
          - "-"
          -
            - !FindInMap [ AccountMap, !Ref "AWS::AccountId", AccountName ]
            - power-users
      Roles: 
        - !Ref RoleCoreReinforceProdDbaLeads
        - !Ref RoleCoreReinforceProdDevops
        - !Ref RoleCoreReinforceProdSyseng
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - 
          Action:
            - iam:AddUserToGroup
            - iam:AttachGroupPolicy
            - iam:AttachRolePolicy
            - iam:AttachUserPolicy
            - iam:CreateAccessKey
            - iam:CreateGroup
            - iam:CreatePolicy
            - iam:CreatePolicyVersion
            - iam:CreateRole
            - iam:CreateSAMLProvider
            - iam:CreateUser
            - iam:CreateVirtualMFADevice
            - iam:DeactivateMFADevice
            - iam:DeleteAccessKey
            - iam:DeleteAccountAlias
            - iam:DeleteAccountPasswordPolicy
            - iam:DeleteGroup
            - iam:DeleteGroupPolicy
            - iam:DeletePolicy
            - iam:DeletePolicyVersion
            - iam:DeleteRole
            - iam:DeleteRolePolicy
            - iam:DeleteSAMLProvider
            - iam:DeleteSSHPublicKey
            - iam:DeleteUser
            - iam:DeleteUserPolicy
            - iam:DeleteVirtualMFADevice
            - iam:DetachGroupPolicy
            - iam:DetachRolePolicy
            - iam:DetachUserPolicy
            - iam:EnableMFADevice
            - iam:PutGroupPolicy
            - iam:PutRolePolicy
            - iam:PutUserPolicy
            - iam:RemoveUserFromGroup
            - iam:UpdateAssumeRolePolicy
            - iam:UpdateGroup
            - iam:UpdateLoginProfile
            - iam:UpdateOpenIDConnectProviderThumbprint
            - iam:UpdateSAMLProvider
            - iam:UpdateSSHPublicKey
            - iam:UpdateServerCertificate
            - iam:UpdateSigningCertificate
            - iam:UpdateUser
            - iam:UploadSSHPublicKey
            - iam:UploadServerCertificate
            - iam:UploadSigningCertificate
          Effect: Deny
          Resource: "*"
        - 
          Action: "*"
          Effect: Allow
          Resource: "*"

  InfosecPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName:
        Fn::Join:
          - "-"
          -
            - !FindInMap [ AccountMap, !Ref "AWS::AccountId", AccountName ]
            - infosec
      Roles: 
        - !Ref RoleCoreReinforceProdInfosec
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - 
          Effect: Allow
          Action:
            - iam:GetAccountPasswordPolicy
            - ec2:DescribeInstances
            - iam:GenerateServiceLastAccessedDetails
            - iam:ListServiceSpecificCredentials
            - lambda:GetFunctionConfiguration
            - iam:ListSigningCertificates
            - ec2:DescribeSnapshots
            - s3:ListObjects
            - ec2:DescribeHostReservationOfferings
            - sns:ListEndpointsByPlatformApplication
            - iam:SimulateCustomPolicy
            - ec2:DescribeVolumeStatus
            - ec2:DescribeScheduledInstanceAvailability
            - ec2:DescribeVolumes
            - ec2:DescribeFpgaImageAttribute
            - ec2:DescribeExportTasks
            - iam:ListRolePolicies
            - iam:GetCredentialReport
            - ec2:DescribeKeyPairs
            - lambda:GetAlias
            - ec2:DescribeReservedInstancesListings
            - trustedadvisor:DescribeNotificationPreferences
            - iam:ListPolicies
            - iam:GetRole
            - sns:ListSubscriptionsByTopic
            - iam:ListSAMLProviders
            - iam:GetPolicy
            - ec2:DescribeSpotFleetRequestHistory
            - lambda:ListFunctions
            - lambda:GetEventSourceMapping
            - ec2:DescribeVpcClassicLinkDnsSupport
            - ec2:DescribeSnapshotAttribute
            - ec2:DescribeIdFormat
            - lambda:ListAliases
            - iam:ListEntitiesForPolicy
            - ec2:DescribeVolumeAttribute
            - ec2:DescribeImportSnapshotTasks
            - ec2:DescribeVpcEndpointServicePermissions
            - ec2:GetPasswordData
            - ec2:DescribeScheduledInstances
            - cloudwatch:*
            - ec2:DescribeImageAttribute
            - ec2:DescribeReservedInstancesModifications
            - iam:GetOpenIDConnectProvider
            - ec2:DescribeSubnets
            - iam:GetRolePolicy
            - sns:GetSMSAttributes
            - iam:GenerateCredentialReport
            - ec2:DescribeMovingAddresses
            - ec2:DescribeRegions
            - ec2:DescribeFlowLogs
            - sns:ListTopics
            - ec2:DescribeVpcEndpointServices
            - ec2:DescribeSpotInstanceRequests
            - iam:GetServiceLastAccessedDetails
            - ec2:DescribeVpcAttribute
            - iam:GetServiceLinkedRoleDeletionStatus
            - iam:ListInstanceProfilesForRole
            - ec2:DescribeAvailabilityZones
            - lambda:ListTags
            - ec2:DescribeNetworkInterfaceAttribute
            - iam:ListAttachedGroupPolicies
            - ec2:DescribeVpcEndpointConnections
            - iam:ListAccessKeys
            - ec2:DescribeInstanceStatus
            - trustedadvisor:DescribeCheckRefreshStatuses
            - ec2:DescribeHostReservations
            - sns:GetTopicAttributes
            - iam:ListGroupPolicies
            - iam:GetSSHPublicKey
            - guardduty:*
            - iam:ListRoles
            - ec2:DescribeBundleTasks
            - ec2:DescribeIdentityIdFormat
            - ec2:DescribeClassicLinkInstances
            - sns:ListSubscriptions
            - trustedadvisor:DescribeCheckItems
            - ec2:DescribeVpcEndpointConnectionNotifications
            - ec2:DescribeSecurityGroups
            - iam:GetContextKeysForCustomPolicy
            - ec2:DescribeFpgaImages
            - iam:CreateServiceLinkedRole
            - s3:ListAllMyBuckets
            - ec2:DescribeVpcs
            - iam:ListAccountAliases
            - iam:GetUser
            - iam:ListGroups
            - iam:GetLoginProfile
            - sns:ListPlatformApplications
            - ec2:DescribeStaleSecurityGroups
            - iam:GetPolicyVersion
            - iam:ListServerCertificates
            - ec2:DescribeVolumesModifications
            - ec2:GetHostReservationPurchasePreview
            - iam:ListVirtualMFADevices
            - ec2:DescribePlacementGroups
            - sns:CheckIfPhoneNumberIsOptedOut
            - ec2:DescribeInternetGateways
            - iam:ListSSHPublicKeys
            - iam:SimulatePrincipalPolicy
            - ec2:GetLaunchTemplateData
            - iam:ListAttachedRolePolicies
            - ec2:DescribeSpotDatafeedSubscription
            - config:*
            - ec2:DescribeAccountAttributes
            - ec2:DescribeNetworkInterfacePermissions
            - ec2:DescribeReservedInstances
            - iam:GetAccountAuthorizationDetails
            - s3:HeadBucket
            - events:*
            - ec2:DescribeNetworkAcls
            - ec2:DescribeRouteTables
            - ec2:DescribeEgressOnlyInternetGateways
            - iam:GetServerCertificate
            - ec2:DescribeLaunchTemplates
            - ec2:DescribeVpnConnections
            - ec2:DescribeVpcPeeringConnections
            - iam:GetAccessKeyLastUsed
            - ec2:DescribeReservedInstancesOfferings
            - sns:GetPlatformApplicationAttributes
            - sns:GetSubscriptionAttributes
            - ec2:DescribeVpcEndpointServiceConfigurations
            - ec2:DescribePrefixLists
            - ec2:GetReservedInstancesExchangeQuote
            - ec2:DescribeInstanceCreditSpecifications
            - ec2:DescribeVpcClassicLink
            - sns:ListPhoneNumbersOptedOut
            - trustedadvisor:DescribeCheckSummaries
            - sns:GetEndpointAttributes
            - iam:GetUserPolicy
            - waf:*
            - iam:ListGroupsForUser
            - lambda:ListEventSourceMappings
            - iam:GetGroupPolicy
            - ec2:DescribeVpcEndpoints
            - ec2:DescribeElasticGpus
            - ec2:DescribeVpnGateways
            - iam:GetAccountSummary
            - ec2:DescribeAddresses
            - lambda:ListVersionsByFunction
            - iam:GetServiceLastAccessedDetailsWithEntities
            - ec2:DescribeInstanceAttribute
            - iam:ListPoliciesGrantingServiceAccess
            - ec2:DescribeDhcpOptions
            - lambda:GetAccountSettings
            - iam:ListMFADevices
            - iam:GetGroup
            - iam:GetContextKeysForPrincipalPolicy
            - ec2:GetConsoleOutput
            - ec2:DescribeSpotPriceHistory
            - ec2:DescribeNetworkInterfaces
            - iam:ListAttachedUserPolicies
            - iam:GetSAMLProvider
            - iam:GetInstanceProfile
            - ec2:DescribeIamInstanceProfileAssociations
            - ec2:DescribeTags
            - lambda:GetFunction
            - ec2:DescribeLaunchTemplateVersions
            - ec2:DescribeImportImageTasks
            - iam:ListUserPolicies
            - ec2:DescribeNatGateways
            - iam:ListInstanceProfiles
            - ec2:DescribeCustomerGateways
            - ec2:DescribeSpotFleetRequests
            - ec2:DescribeHosts
            - ec2:DescribeImages
            - ec2:DescribeSpotFleetInstances
            - iam:ListPolicyVersions
            - iam:ListOpenIDConnectProviders
            - ec2:DescribeSecurityGroupReferences
            - iam:ListUsers
            - ec2:DescribeConversionTasks
            - lambda:GetPolicy
          Resource: "*"
        -
          Effect: Allow
          Action:
            - s3:ListBucketByTags
            - s3:GetLifecycleConfiguration
            - s3:ListBucketMultipartUploads
            - s3:GetBucketTagging
            - s3:GetInventoryConfiguration
            - s3:GetBucketWebsite
            - s3:ListBucketVersions
            - s3:GetBucketLogging
            - s3:ListBucket
            - s3:GetAccelerateConfiguration
            - s3:GetBucketVersioning
            - s3:GetBucketAcl
            - s3:GetBucketNotification
            - s3:GetBucketPolicy
            - ec2:GetConsoleScreenshot
            - s3:GetReplicationConfiguration
            - s3:GetBucketRequestPayment
            - s3:GetBucketCORS
            - s3:GetAnalyticsConfiguration
            - s3:GetMetricsConfiguration
            - s3:GetBucketLocation
            - s3:GetIpConfiguration
          Resource:
            - arn:aws:s3:::*
            - arn:aws:ec2:*:*:instance/*
        - 
          Effect: Allow
          Action:
            - s3:GetObjectVersionTorrent
            - s3:GetObjectAcl
            - s3:GetObject
            - s3:GetObjectTorrent
            - s3:GetObjectVersionTagging
            - s3:GetObjectVersionAcl
            - s3:GetObjectTagging
            - s3:GetObjectVersionForReplication
            - s3:GetObjectVersion
            - s3:ListMultipartUploadParts
          Resource: arn:aws:s3:::*/*

  NetworkingLeadsPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName:
        Fn::Join:
          - "-"
          -
            - !FindInMap [ AccountMap, !Ref "AWS::AccountId", AccountName ]
            - networkingleads
      Roles: 
        - !Ref RoleCoreReinforceProdNetworkingLeads
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - 
          Action:
            - iam:AddUserToGroup
            - iam:CreateAccessKey
            - iam:CreateGroup
            - iam:CreateSAMLProvider
            - iam:CreateUser
            - iam:CreateVirtualMFADevice
            - iam:DeactivateMFADevice
            - iam:DeleteAccessKey
            - iam:DeleteAccountAlias
            - iam:DeleteAccountPasswordPolicy
            - iam:DeleteGroup
            - iam:DeleteGroupPolicy
            - iam:DeletePolicy
            - iam:DeletePolicyVersion
            - iam:DeleteRole
            - iam:DeleteRolePolicy
            - iam:DeleteSAMLProvider
            - iam:DeleteSSHPublicKey
            - iam:DeleteUser
            - iam:DeleteUserPolicy
            - iam:DeleteVirtualMFADevice
            - iam:EnableMFADevice
            - iam:RemoveUserFromGroup
            - iam:UpdateGroup
            - iam:UpdateLoginProfile
            - iam:UpdateOpenIDConnectProviderThumbprint
            - iam:UpdateSAMLProvider
            - iam:UpdateSSHPublicKey
            - iam:UpdateServerCertificate
            - iam:UpdateSigningCertificate
            - iam:UpdateUser
            - iam:UploadSSHPublicKey
            - iam:UploadServerCertificate
            - iam:UploadSigningCertificate
          Effect: Deny
          Resource: "*"
        - 
          Action: "*"
          Effect: Allow
          Resource: "*"

  NocPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName:
        Fn::Join:
          - "-"
          -
            - !FindInMap [ AccountMap, !Ref "AWS::AccountId", AccountName ]
            - noc
      Roles: 
        - !Ref RoleCoreReinforceProdNoc
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - 
          Action:
            - ec2:RebootInstances
            - ec2:StartInstances
            - ec2:StopInstances
          Effect: Allow
          Resource: "*"
        - 
          Action:
            - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
            - elasticloadbalancing:RegisterInstancesWithLoadBalancer
          Effect: Allow
          Resource: "*"
        - 
          Action:
            - elasticloadbalancing:RegisterTargets
            - elasticloadbalancing:DeregisterTargets
          Effect: Allow
          Resource: "*"
        - 
          Effect: Allow
          Action:
            - ecs:RunTask
            - ecs:ListAttributes
            - ecs:ListTasks
            - ecs:StartTask
            - ecs:StopTask
            - ecs:ListContainerInstances
            - ecs:DescribeContainerInstances
            - ecs:DescribeTasks
            - ecs:DescribeClusters
          Resource:
            - arn:aws:ecs:*:*:task-definition/*:*
            - arn:aws:ecs:*:*:task/*
            - arn:aws:ecs:*:*:container-instance/*
            - arn:aws:ecs:*:*:cluster/*
