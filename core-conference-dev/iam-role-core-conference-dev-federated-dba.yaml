---
AWSTemplateFormatVersion: 2010-09-09
Description: Create base IAM roles

Parameters:
  AccountName:
    Description: The name of the AWS account this template is launched in.
    Type: String

Resources:
  Dba:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub arn:aws:iam::${AWS::AccountId}:saml-provider/okta-sso
            Action: sts:AssumeRoleWithSAML
            Condition:
              StringEquals:
                SAML:aud: https://signin.aws.amazon.com/saml
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::667621734181:root
            Action: sts:AssumeRole
            Condition: {}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
        - arn:aws:iam::aws:policy/AWSSupportAccess
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/AmazonRedshiftFullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      RoleName: !Sub
        - "${Account}-dba"
        - Account: !Ref AccountName

  CoreConferenceDevDba:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AccountName}-dba-policy"
      Roles:
        - !Ref Dba
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - dms:*
              - kms:ListAliases
              - kms:DescribeKey
              - iam:GetRole
              - iam:PassRole
              - iam:CreateRole
              - iam:AttachRolePolicy
              - ec2:DescribeVpcs
              - ec2:DescribeInternetGateways
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeSubnets
              - ec2:DescribeSecurityGroups
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - cloudwatch:Get*
              - cloudwatch:List*
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:FilterLogEvents
              - logs:GetLogEvents
              - redshift:Describe*
              - redshift:ModifyClusterIamRoles
            Resource: "*"
          - Effect: Allow
            Action:
              - '*'
            Resource: "arn:aws:s3:::dms-684904355706-cdfbas3a0vph" 
